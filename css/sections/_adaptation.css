/* css/sections/_adaptation.css */

.adaptation {
  background-color: #1C2F4D; /* Цвет доски */
  background-image: url('../../images/textures/chalkboard.png'); /* Путь к изображению */
  background-repeat: repeat; /* Повторяется */
  background-size: auto; /* Размер авто */
  padding-top: 80px;
  padding-bottom: 10px;
  position: relative; /* Важно для дочерних абсолютных элементов (если будут добавлены фоновые эффекты) */
  overflow: hidden;
}

.adaptation-container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 40px;
  max-width: 1200px;
  margin: 0 auto;
  position: relative; /* Важно: чтобы сферы позиционировались относительно него, если они внутри контейнера */
  z-index: 2; /* Чтобы контент был поверх фоновых эффектов, если они будут */
}

/* Левая колонка - без изменений */
.adaptation-text {
  font-family: 'IBM Plex Sans', sans-serif;
  color: #FFF8EE; /* Светлый текст */
  line-height: 1.6;
}

.adaptation-title {
  font-family: 'Old Standard TT', serif;
  font-size: 2rem;
  color: #FFF8EE; /* Светлый цвет */
  margin-bottom: 40px;
}

.adaptation-icon {
  width: 24px;
  height: 24px;
  flex-shrink: 0;
  margin-top: 2px;
  /* Объединяем все фильтры в одну строку для обычного состояния */
  filter: invert(100%) sepia(100%) hue-rotate(30deg) saturate(300%) brightness(1.5) contrast(1.2) drop-shadow(0 0 5px var(--color-star-glow)); 
  transition: filter 0.3s ease-out, transform 0.3s ease-out; /* Плавный переход при наведении */
}

.adaptation-item:hover .adaptation-icon {
  /* При наведении: сохраняем invert(100%) и усиливаем остальные эффекты */
  filter: invert(100%) sepia(100%) hue-rotate(30deg) saturate(300%) brightness(2) contrast(1.5) drop-shadow(0 0 15px var(--color-star-glow)); 
  transform: scale(1.1); /* Можно добавить легкое увеличение при наведении */
}

.adaptation-list {
  list-style: none;
  padding: 0;
}

.adaptation-item {
  display: flex;
  gap: 15px;
  margin-bottom: 30px;
  align-items: flex-start; /* Убедимся, что текст начинается на одном уровне с иконкой */
}

.adaptation-item h3 { /* Добавлено, чтобы заголовки пунктов были не такие большие */
  font-size: 1.1em;
  line-height: 1.6;
  margin-top: 0;
  margin-bottom: 5px;
  color: #D4A017; /* Золотой цвет для заголовков пунктов */
}

.adaptation-item p { /* Добавлено для параграфов внутри списка */
  font-size: 1.1em;
  line-height: 1.6;
  margin-bottom: 0;
}

.adaptation-icon {
  width: 24px; /* Немного увеличим для лучшей видимости */
  height: 24px;
  flex-shrink: 0;
  margin-top: 2px; /* Для выравнивания с текстом */
}

/* Правая колонка - Сферы */
.adaptation-spheres {
  position: relative; /* Контейнер для абсолютного позиционирования сфер */
  min-height: 500px; /* Достаточная высота для размещения всех сфер */
  /* background-color: rgba(255, 0, 0, 0.05); /* Временно для отладки, потом удалить */
}

.sphere {
  position: absolute;
  border-radius: 50%;
  border: 2px dashed rgba(212, 160, 23, 0.7); /* Золотой пунктир */
  overflow: hidden; /* Важно, чтобы гифки обрезались по кругу */
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0; /* Изначально невидимы */
  animation: fadeIn 4s forwards; /* Ваша анимация появления */
  /* Дополнительные стили, которые не касаются позиционирования, но были в вашем коде */
  transition: transform 0.3s ease, box-shadow 0.3s ease; /* Для будущих hover-эффектов */
  box-shadow: 0 0 10px rgba(212, 160, 23, 0.2); /* Легкое свечение */
}

.sphere img {
  width: 100%;
  height: 100%;
  object-fit: cover; /* Изображение будет покрывать всю сферу */
  display: block;
}

/* --- Коррекция позиционирования сфер --- */

.sphere-large {
  width: 320px;
  height: 320px;
  top: 50%; /* Привязываем верхний край к середине родителя */
  left: 50%; /* Привязываем левый край к середине родителя */
  /* Смещаем элемент так, чтобы его центр был немного выше и левее центра родителя.
     -55% по X и -55% по Y от СОБСТВЕННОГО размера элемента.
     Это создаст легкое наложение большой сферы над средней. */
  transform: translate(-55%, -55%); 
  z-index: 3; /* Большая сфера поверх всех */
  animation-delay: 0.3s;
}

.sphere-medium {
  width: 280px;
  height: 280px;
  top: 30%; /* Привязываем верхний край к 30% от верха родителя */
  left: 30%; /* Привязываем левый край к 30% от левого края родителя */
  /* Смещаем элемент так, чтобы его центр был немного правее и ниже точки привязки.
     -45% по X и -45% по Y от СОБСТВЕННОГО размера элемента.
     Это создаст легкое наложение средней сферы над малой. */
  transform: translate(-60%, -60%); 
  z-index: 2; /* Средняя сфера под большой, но над малой */
  animation-delay: 0.6s;
}

.sphere-small {
  width: 140px;
  height: 140px;
  bottom: 15%; /* Привязываем нижний край к 20% от низа родителя */
  right: 20%; /* Привязываем правый край к 20% от правого края родителя */
  /* transform: translate(0, 0); /* Здесь не нужно дополнительное смещение, позиционируем прямо */
  z-index: 1; /* Малая сфера под всеми */
  animation-delay: 0.9s;
}

/* Анимации (ваша fadeIn, без изменений) */
@keyframes fadeIn {
  to { opacity: 0.8; }
}

/* --- Адаптив: Коррекция позиционирования сфер на разных разрешениях --- */

@media (max-width: 1024px) {
  .adaptation-title {
      font-size: 2.2rem;
  }
  /* Для 1024px, уменьшим размеры и скорректируем смещения для легкого наложения */
  .sphere-large {
      width: 280px;
      height: 280px;
      top: 50%;
      left: 50%;
      transform: translate(-58%, -58%); /* Чуть больше смещение для наложения */
  }
  .sphere-medium {
      width: 240px;
      height: 240px;
      top: 30%;
      left: 30%;
      transform: translate(-48%, -48%); /* Чуть больше смещение для наложения */
  }
  .sphere-small {
      width: 120px; /* Немного уменьшим */
      height: 120px;
      bottom: 15%;
      right: 15%;
  }
}

@media (max-width: 768px) {
  .adaptation-container {
      grid-template-columns: 1fr;
      gap: 30px;
  }
  
  .adaptation-text {
      text-align: center; /* Центрируем текст на мобильных */
  }

  .adaptation-title {
      font-size: 2rem;
      margin-bottom: 30px;
  }

  .adaptation-list {
      text-align: left; /* Возвращаем выравнивание списка влево, так как иконка есть */
      display: flex; /* Чтобы элементы списка были в столбик, но сами элементы по центру */
      flex-direction: column;
      align-items: center;
  }

  .adaptation-item {
      margin-bottom: 20px;
      justify-content: flex-start; /* Снова выравниваем элементы внутри li влево */
      width: fit-content; /* Чтобы сам адаптер-айтэм не растягивался на всю ширину */
      max-width: 90%;
  }

  .adaptation-spheres {
      min-height: 350px; /* Уменьшаем высоту для мобильных */
      order: -1; /* Перемещаем сферы вверх на мобильных */
      margin-bottom: 30px;
  }

  /* Мобильное позиционирование сфер: более компактное, но с легким наложением */
  .sphere-large {
      width: 250px;
      height: 250px;
      top: 20%; /* Позиционируем относительно верха */
      left: 50%; /* Центрируем по горизонтали */
      transform: translate(-65%, -50%); /* Сдвигаем влево и вверх, чтобы накладывалось */
      z-index: 3;
  }

  .sphere-medium {
      width: 200px;
      height: 200px;
      top: 45%; /* Позиционируем ниже */
      left: 25%; /* Сдвигаем влево */
      transform: translate(-50%, -50%); /* Центрируем от своей новой точки */
      z-index: 2;
  }

  .sphere-small {
      width: 120px;
      height: 120px;
      bottom: 5%; /* Привязываем к низу */
      right: 5%; /* Привязываем к правому краю */
      transform: translate(0, 0); /* Без дополнительного смещения */
      z-index: 1;
  }
}

@media (max-width: 480px) {
  .adaptation-title {
      font-size: 1.6rem;
  }
  .adaptation-icon {
      width: 20px;
      height: 20px;
  }
  .adaptation-item h3 {
      font-size: 1em;
  }
  .adaptation-item p {
      font-size: 0.85em;
  }

  .sphere-large {
      width: 180px;
      height: 180px;
      top: 15%;
      left: 50%;
      transform: translate(-60%, -50%);
  }
  .sphere-medium {
      width: 140px;
      height: 140px;
      top: 40%;
      left: 20%;
      transform: translate(-50%, -50%);
  }
  .sphere-small {
      width: 80px;
      height: 80px;
      bottom: 0%;
      right: 0%;
  }
}

.adaptation-spheres {
   position: relative; /* Контейнер для абсолютного позиционирования сфер */
   min-height: 500px; /* Убедитесь, что здесь есть достаточная высота для падения пыльцы */
  /* background-color: rgba(255, 0, 0, 0.05); /* Можно временно включить для отладки */
  }
  
  
  .magic-effects-container {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%; /* Должен занимать всю доступную высоту .adaptation-spheres */
      pointer-events: none; /* Важно, чтобы не мешал взаимодействию со сферами */
      z-index: 1; /* Чтобы пыльца была под сферами, если сферы имеют z-index выше */
      overflow: hidden; /* КРАЙНЕ ВАЖНО, чтобы пыльца не выходила за пределы этого блока */
  }