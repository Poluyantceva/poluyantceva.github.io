@keyframes grow {
  to { transform: scaleY(1); }
}

@keyframes underline {
  from { transform: scaleX(0); }
  to { transform: scaleX(1); }
}

@keyframes draw {
  to { stroke-dashoffset: 0; }
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-8px); }
}

@keyframes fadeInOut {
  0% { opacity: 0; transform: scale(0.3); }
  50% { opacity: 0.7; transform: scale(1); }
  100% { opacity: 0; transform: scale(0.5); }
}

@keyframes drawLine {
  to { 
    stroke-dashoffset: 0;
    transform: scaleX(1);
  }
}

/* НОВЫЙ @keyframes shine для более мягкого перелива кнопки */
@keyframes shine {
  0% { transform: translateX(-100%); opacity: 0; }
  50% { transform: translateX(0%); opacity: 1; }
  100% { transform: translateX(100%); opacity: 0; }
}

/* @keyframes growMobile (он вам нужен, и он здесь) */
@keyframes growMobile {
  to { transform: scaleY(1) translateX(-50%); }
}

.chalk-particle {
  position: absolute; /* Абсолютное позиционирование относительно .origins-quote */
  background-color: rgba(248, 248, 248, 0.8); /* Белый мел, полупрозрачный */
  border-radius: 50%; /* Круглая форма */
  pointer-events: none; /* Не перехватывает события мыши */
  opacity: 1; /* Начальная непрозрачность */
  z-index: 10; /* Убедитесь, что частицы поверх цитаты и фона */

  /* Анимация падения и исчезновения */
  animation: fallAndFade 0.8s forwards ease-out; /* Длительность и функция анимации */
}

/* Ключевые кадры анимации для частиц */
@keyframes fallAndFade {
  0% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    transform: translate(var(--fall-x), var(--fall-y)) scale(0.1); /* fall-x/y будут задаваться JS */
    opacity: 0;
  }
}

/* --- НОВЫЕ СТИЛИ И АНИМАЦИИ ДЛЯ ПРОБЛЕМНЫХ ЛИНИЙ (ДОБАВИТЬ В КОНЕЦ ФАЙЛА) --- */

/* Контейнер SVG, который будет создан JavaScript'ом */
.problems-background-lines {
  position: absolute;
  top: 0;
  left: 0;
  width: 80%;
  height: 70%;
  pointer-events: none; /* Важно: чтобы не блокировать взаимодействие с текстом */
  z-index: 0; /* Линии на заднем плане */
  overflow: hidden; /* Обрезаем, если линии выходят за пределы контейнера */
}

/* Стили для каждой отдельной линии */
.problem-line {
  fill: none; 
  stroke: #b8b6ae; 
  stroke-width: 1px; /* Тонкие линии */
  stroke-linecap: round; /* Круглые концы линий для более мягкого вида */
  opacity: 0,8; 
  
  /* CSS-переменные, значения которых устанавливаются JavaScript'ом */
  --problem-line-dash-length: 0; /* Длина линии для анимации рисования */
  --problem-line-animation-delay: 0s; /* Задержка перед началом анимации */
  --problem-line-total-duration: 8s; /* ОБЩАЯ ДЛИТЕЛЬНОСТЬ ОДНОГО ЦИКЛА АНИМАЦИИ */
}

/* Анимация появления, дребезжания и исчезновения линии (ЗАЦИКЛЕННАЯ) */
@keyframes appearTrembleAndFadeLoop {
  0% { /* Начало: линия невидима, не нарисована */
      stroke-dashoffset: var(--problem-line-dash-length);
      opacity: 0;
      transform: translate(0, 0); /* Начальное положение */
  }
  10% { /* Появление: линия начинает рисоваться и проявляться */
      stroke-dashoffset: 0;
      opacity: 1;
  }
  15% { /* Начало дребезжания */
      transform: translate(0, 0);
  }
  25% { /* Пик дребезжания 1 */
      transform: translate(0.4px, -0.4px);
  }
  35% { /* Пик дребезжания 2 */
      transform: translate(-0.4px, 0.4px);
  }
  45% { /* Пик дребезжания 3 */
      transform: translate(0.4px, 0.4px);
  }
  55% { /* Завершение дребезжания, стабилизация */
      transform: translate(0, 0);
      opacity: 1;
  }
  70% { /* Начало плавного исчезновения */
      opacity: 1;
  }
  100% { /* Полное исчезновение и возврат в начальное состояние для повтора */
      opacity: 0;
      transform: translate(0, 0);
      stroke-dashoffset: var(--problem-line-dash-length); /* Важно для зацикливания: сброс dashoffset */
  }
}

/* Класс, который JS добавит сразу после создания, чтобы запустить анимацию */
.problem-line.is-active {
  animation: 
      appearTrembleAndFadeLoop var(--problem-line-total-duration) infinite linear var(--problem-line-animation-delay);
}

.problems-content {
  position: relative; /* Критично: чтобы SVG позиционировался относительно него */
  z-index: 1; /* Чтобы текст был ПОВЕРХ линий */
}

/* MAGIC SPHERES ANIMATIONS */
.big-sphere {
  position: absolute;
  width: 200px;
  height: 200px;
  border-radius: 50%;
  border: 2px dashed rgba(212, 160, 23, 0.7);
  overflow: hidden;
  transition: all 0.5s ease;
  z-index: 1;
  transform: scale(0);
  opacity: 0;
}

.big-sphere img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.gold-dust {
  position: absolute;
  width: 4px;
  height: 4px;
  background-color: #D4A017;
  border-radius: 50%;
  opacity: 0;
  animation: floatDust 5s infinite;
}

@keyframes floatDust {
  0% { transform: translate(0, 0); opacity: 0; }
  20% { opacity: 0.7; }
  100% { transform: translate(100px, -100px); opacity: 0; }
}

/* Для линий между сферами */
@keyframes connectSpheres {
  to { stroke-dashoffset: 0; }
}

/* --- Стили и анимации для "Магической Пыльцы" --- */

/* Базовые стили для частицы пыльцы */
.dust-particle {
  position: absolute;
  border-radius: 50%; /* Круглая форма */
  pointer-events: none; /* Не реагирует на события мыши */
  will-change: transform, opacity; /* Оптимизация для анимации */
}

/* Анимация падения и исчезновения */
@keyframes dustFallAndFade {
  0% {
      transform: translateY(0) scale(1);
      opacity: 5;
  }
  70% {
      opacity: 0.6; /* Мерцание: уменьшаем непрозрачность на 70% пути */
  }
  100% {
      transform: translateY(var(--fall-distance)) scale(0.5); /* Падает и уменьшается */
      opacity: 0; /* Полностью исчезает */
  }
}

/* Анимация легкого мерцания (для дополнительного эффекта) */
@keyframes dustSparkle {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 0.3; } /* Легкое мерцание */
}


/* --- АНИМАЦИЯ ДВИЖЕНИЯ ПУНКТИРНОЙ ЛИНИИ S-ОБРАЗНОЙ ФОРМЫ --- */

@keyframes dashFlowTopToBottom {
  from {
      stroke-dashoffset: 0.001; /* Начинаем с очень малого положительного значения */
  }
  to {
      /* Увеличиваем stroke-dashoffset, чтобы пунктир двигался СВЕРХУ ВНИЗ.
         100 - это 10 полных паттернов. Добавляем 0.001 для "подталкивания" анимации. */
      stroke-dashoffset: -100.001;
  }
}

.animated-dash-line {
  /* Эти стили устанавливают линию СРАЗУ видимой и готовой к движению */
  stroke-dashoffset: 0.001; /* Устанавливаем то же начальное значение в классе */
  opacity: 0.7;           /* Линия постоянно видима, с нужной прозрачностью */

  /* Анимация только для движения пунктира */
  animation: dashFlowTopToBottom 5s linear infinite; /* 5s - длительность, linear - равномерно, infinite - бесконечно */
  animation-delay: 0.1s; /* Если нужна небольшая задержка перед стартом движения (после загрузки страницы) */
}

/* --- КОНЕЦ НОВОЙ АНИМАЦИИ --- */

@keyframes twinkle {
  0%, 100% { opacity: 0.7; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.2); }
}

@keyframes cta-float {
  0% { transform: translate(0, 0) rotate(0deg); }
  25% { transform: translate(20px, -10px) rotate(5deg); }
  50% { transform: translate(-15px, 15px) rotate(-5deg); }
  75% { transform: translate(10px, -5px) rotate(3deg); }
  100% { transform: translate(0, 0) rotate(0deg); }
}

@keyframes cta-fade {
  0%, 100% { opacity: 0.1; }
  50% { opacity: 0.3; }
}

@keyframes cta-line-float {
  0% { transform: translateY(0); }
  50% { transform: translateY(10px); }
  100% { transform: translateY(0); }
}

.cta-dotted-line {
  animation: 
    cta-line-fade 8s infinite alternate,
    cta-line-float 12s infinite ease-in-out;
}

/* css/utils/_animations.css */

/* ... Ваши существующие анимации ... */

/* Анимации для точек в секции контактов */
@keyframes contact-dot-twinkle {
  0%, 100% {
      opacity: 0.5;
      
      filter: drop-shadow(0 0 4px var(--gold-glow));
  }
  50% {
      opacity: 1;
      /* transform: scale(1.1); */
      filter: drop-shadow(0 0 10px var(--gold-glow));
  }
}

@keyframes contact-dot-float {
  0% { transform: translate(0, 0); } /* Анимация будет смещать относительно исходного положения */
  25% { transform: translate(6px, -10px); }
  50% { transform: translate(-4px, 6px); }
  75% { transform: translate(2px, -4px); }
  100% { transform: translate(0, 0); }
}